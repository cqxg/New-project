import React, { useState } from 'react'
import { Range, Direction, getTrackBackground } from 'react-range';

const svgStatuses = (status) => {
    if (status) {
        return (
            <svg width="18" height="20" viewBox="0 0 18 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path fill="#fff" d="M16.1026 6.65703C16.6832 7.0114 17.162 7.50415 17.4939 8.08895C17.8258 8.67375 18 9.33138 18 10C18 10.6686 17.8258 11.3262 17.4939 11.911C17.162 12.4958 16.6832 12.9886 16.1026 13.343L6.17673 19.4008C5.56563 19.7737 4.86343 19.9802 4.14304 19.9986C3.42265 20.0171 2.71033 19.8469 2.08003 19.5058C1.44973 19.1647 0.924423 18.665 0.558659 18.0587C0.192892 17.4524 -1.90735e-06 16.7615 0 16.0578V3.94219C-1.90735e-06 3.23849 0.192892 2.54762 0.558659 1.9413C0.924423 1.33498 1.44973 0.835314 2.08003 0.494183C2.71033 0.153052 3.42265 -0.017112 4.14304 0.00135851C4.86343 0.019829 5.56563 0.22626 6.17673 0.599221L16.1026 6.65703Z" />
            </svg>
        )
    } else {
        return (
            <svg width="17" height="21" viewBox="0 0 17 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="6" height="21" rx="3" fill="#fff" />
                <rect x="11" width="6" height="21" rx="3" fill="#fff" />
            </svg>
        )
    }

}

export const PlayBtn = ({ status, handleStatus }) => (<div onClick={handleStatus} className="audioplayer__btn-status">{svgStatuses(status)}</div>)

export const Time = ({ seconds }) => {
    let newSeconds = seconds;
    const min = Math.floor(newSeconds / 60)
    const sec = Math.floor(newSeconds % 60)
    return (
        <div className="audioplayer__time">
            {min < 10 ? `0${min}` : min}:{sec < 10 ? `0${sec}` : sec}
        </div>
    )
}

export const Volume = ({ handleToggleVolume, toggleVolume, setVolume, volume }) => {    
    const disableVolume = () => {
        if (volume[0] < 1) setVolume([50])
        else setVolume([0])
    }

    return (
        <div onMouseEnter={() => handleToggleVolume(true)} onMouseLeave={() => handleToggleVolume(false)} className={`audioplayer__volume ${!toggleVolume ? '' : 'active'}`}>
            {toggleVolume ?
                <Range
                    direction={Direction.Up}
                    step={1}
                    min={0}
                    max={100}
                    values={volume}
                    onChange={(values) => setVolume(values)}
                    orientation="vertical"
                    renderTrack={({ props, children }) => (
                        <div
                            {...props}
                            style={{
                                ...props.style,
                                height: '70px',
                                width: '4px',
                                top: '-15px',
                                position: 'relative',
                                background: getTrackBackground({
                                    values: volume,
                                    colors: ['#FF5134', '#DEDEDE'],
                                    min: 0,
                                    max: 100,
                                    direction: Direction.Up
                                }),
                                alignSelf: 'center'
                            }}
                        >
                            {children}
                        </div>
                    )}
                    renderThumb={({ props }) => (
                        <div
                            {...props}
                            style={{
                                ...props.style,
                                height: '14px',
                                width: '14px',
                                border: '1px solid #fff',
                                borderRadius: '50%',
                                backgroundColor: '#FF5134',
                                outline: 'none'
                            }}
                        />
                    )}
                />
                : null}
            <svg onClick={() => disableVolume()} width="45" height="30" viewBox="0 0 32 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                {volume[0] < 1 ?
                    <>
                        <path d="M21.8408 28.0641C21.8427 28.4287 21.7414 28.7864 21.5483 29.0962C21.3553 29.406 21.0785 29.6552 20.7496 29.8152C20.498 29.9367 20.2221 29.9998 19.9425 30C19.4983 29.9992 19.0689 29.8411 18.731 29.5539L8.34886 20.7883H2.81941C2.56726 20.7855 2.31814 20.7332 2.08628 20.6345C1.85442 20.5357 1.64435 20.3925 1.46807 20.2128C1.2918 20.0332 1.15277 19.8208 1.05892 19.5876C0.965068 19.3545 0.918242 19.1052 0.921111 18.8541V11.1521C0.917355 10.9003 0.963515 10.6502 1.05694 10.4162C1.15038 10.1822 1.28924 9.9689 1.46558 9.78844C1.64192 9.60799 1.85228 9.46397 2.08459 9.36464C2.31691 9.26531 2.56661 9.21261 2.81941 9.20957H8.34886L18.731 0.445633C19.0056 0.211355 19.3427 0.0618665 19.7012 0.0154528C20.0597 -0.0309609 20.4241 0.0277125 20.7496 0.184296C21.0785 0.344347 21.3553 0.593576 21.5483 0.903341C21.7414 1.21311 21.8427 1.57084 21.8408 1.93542V28.0641Z" fill="#1E2843" fill-opacity="0.7" />
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M38.2203 8.61105C37.7984 8.17457 37.1143 8.17457 36.6924 8.61105L31.9652 13.5012L27.5241 8.90687C27.1021 8.47039 26.4181 8.4704 25.9961 8.90687C25.5742 9.34335 25.5742 10.051 25.9961 10.4875L30.4373 15.0818L25.9967 19.6755C25.5748 20.112 25.5748 20.8196 25.9967 21.2561C26.4187 21.6926 27.1028 21.6926 27.5247 21.2561L31.9652 16.6624L36.6917 21.5519C37.1137 21.9884 37.7978 21.9884 38.2197 21.5519C38.6416 21.1155 38.6416 20.4078 38.2197 19.9713L33.4932 15.0818L38.2203 10.1917C38.6422 9.7552 38.6422 9.04753 38.2203 8.61105Z" fill="#1E2843" fill-opacity="0.5" />
                    </>
                    :
                    <path opacity="0.5" d="M20.5191 28.0641C20.521 28.4287 20.4216 28.7864 20.2323 29.0962C20.0429 29.406 19.7714 29.6552 19.4489 29.8152C19.2021 29.9367 18.9314 29.9998 18.6572 30C18.2215 29.9992 17.8003 29.8411 17.4689 29.5539L7.28566 20.7883H1.86214C1.61482 20.7855 1.37048 20.7332 1.14306 20.6345C0.915636 20.5357 0.709592 20.3925 0.536693 20.2128C0.363794 20.0332 0.227425 19.8208 0.135374 19.5876C0.0433238 19.3545 -0.00260599 19.1052 0.000208006 18.8541V11.1521C-0.00347566 10.9003 0.0417998 10.6502 0.13344 10.4162C0.225081 10.1822 0.361285 9.9689 0.534249 9.78844C0.707213 9.60799 0.913538 9.46397 1.1414 9.36464C1.36926 9.26531 1.61419 9.21261 1.86214 9.20957H7.28566L17.4689 0.445633C17.7382 0.211355 18.0689 0.0618665 18.4206 0.0154528C18.7722 -0.0309609 19.1295 0.0277125 19.4489 0.184296C19.7714 0.344347 20.0429 0.593576 20.2323 0.903341C20.4216 1.21311 20.521 1.57084 20.5191 1.93542V28.0641ZM27.6767 25.0413C27.6309 25.0413 27.5882 25.0413 27.5423 25.0413C27.2977 25.0401 27.0558 24.9895 26.8306 24.8923C26.6055 24.7952 26.4017 24.6534 26.2311 24.4753L25.982 24.2156C25.6651 23.8841 25.4733 23.4497 25.4404 22.9889C25.4074 22.528 25.5353 22.0701 25.8017 21.6955C27.2345 19.6777 27.9816 17.241 27.9298 14.7538C27.8781 12.2665 27.0304 9.86406 25.5149 7.90955C25.2244 7.53648 25.077 7.06913 25.0999 6.59411C25.1228 6.11908 25.3145 5.6686 25.6394 5.32614L25.8886 5.06813C26.0691 4.87584 26.2887 4.72576 26.5322 4.62831C26.7756 4.53087 27.0369 4.4884 27.2981 4.50384C27.5594 4.51829 27.8147 4.58881 28.0472 4.71075C28.2797 4.83269 28.4842 5.00328 28.647 5.21129C30.7502 7.91015 31.9265 11.2335 31.9967 14.6746C32.0668 18.1157 31.0269 21.4856 29.0355 24.2706C28.8775 24.4911 28.6741 24.6742 28.4395 24.807C28.2048 24.9398 27.9446 25.0191 27.6767 25.0396V25.0413Z" fill="#1E2843" />
                }
            </svg>
        </div>
    )
}